import 'package:flutter/material.dart';import 'package:learning_get_it/pages/home/home_store.dart';import 'package:learning_get_it/services/getit_service.dart';import 'package:mobx/mobx.dart';import 'package:learning_get_it/models/post.dart';import 'package:learning_get_it/services/net_servic.dart';part 'detail_store.g.dart';class DetailStore = DetailStoreBase with _$DetailStore;abstract class DetailStoreBase with Store {  @observable   bool isLoading = false;  Post? post;  TextEditingController titleController = TextEditingController();  TextEditingController bodyController = TextEditingController();  @action  void init() {    var homeStore = locator<HomeStore>();    if(homeStore.selected != null) {      post = homeStore.selected;      titleController.text = homeStore.selected!.title;      bodyController.text = homeStore.selected!.body;    }  }@actionFuture<void> submit(BuildContext context)async{  if(post == null){    isLoading = true;    await createPost(context);    print('create');  }else{    isLoading = true;    print('update');    await updatePost(context);  }  isLoading = false;  Navigator.pop(context);}  @action  Future<void> createPost(BuildContext context) async {    var homeStore = locator<HomeStore>();    String title = titleController.text.trim();    String body = bodyController.text.trim();    Post post = Post(title: title, body: body, userId: '1');    await Network.POST(Network.API_CREATE, Network.paramsCreate(post));    post.id = (int.parse(homeStore.list.last.id!) + 1).toString();    homeStore.list.add(post);  }  @action  Future<void> updatePost(BuildContext context) async {    var homeStore = locator<HomeStore>();    String title = titleController.text.trim();    String body = bodyController.text.trim();    if(title == post!.title && body == post!.body){return;    }else {      Post r = Post(title: title, body: body, userId: post!.userId,          id: post!.id);      String? res =      await Network.PUT("${Network.API_UPDATE}${post!.id}", r          .toJson());homeStore.selected!.title = title;homeStore.selected!.body = body;    }  }}