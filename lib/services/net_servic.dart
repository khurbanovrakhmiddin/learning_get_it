import 'dart:convert';import 'package:http/http.dart';import 'package:learning_get_it/models/post.dart';class Network {  static String baseUrl = "6267cc7c01dab900f1c52ad8.mockapi.io";  static String BASE = "6267cc7c01dab900f1c52ad8.mockapi.io";  static Map<String,String> headers = {'Content-Type':'application/json; charset=UTF-8'};  /* Http Apis */  static String API_LIST = "/tg/api/v1/post";  static String API_CREATE = "/tg/api/v1/post";  static String API_UPDATE = "/tg/api/v1/post/"; //{id}  static String API_DELETE = "/tg/api/v1/post/"; //{id}  /* Http Requests */  static Future<String?> GET(String api, Map<String, String> params) async {    var uri = Uri.https(BASE, api, params); // http or https    var response = await get(uri, headers: headers);    if (response.statusCode == 200) {      return response.body;    }    return null;  }  static Future<String?> POST(String api, Map<String, dynamic> params) async {    print(params.toString());    var uri = Uri.https(BASE, api); // http or https    var response = await post(uri, headers: headers,body: jsonEncode(params));    if (response.statusCode == 200 || response.statusCode == 201) {      return response.body;    }    return null;  }  static Future<String?> PUT(String api, Map<String,      dynamic>? body) async {    Uri url = Uri.https(baseUrl, api);    Response response = await  put(url, headers: headers, body:    jsonEncode(body));    if(response.statusCode == 200 || response.statusCode == 201) {      return response.body;    }    return null;  }  static Future<String?> DEL(String api, Map<String, String> params) async {    var uri = Uri.https(BASE, api, params); // http or https    var response = await delete(uri, headers: headers);    if (response.statusCode == 200) {      return response.body;    }    return null;  }  /* Http Params */  static Map<String, String> paramsEmpty() {    Map<String, String> params = {};    return params;  }  static Map<String, String> paramsCreate(Post post) {    Map<String, String> params = {};    params.addAll({      'title': post.title,      'body': post.body,      'userId': post.userId.toString(),    });    return params;  }  static Map<String, dynamic> paramsUpdate(Post post) {    Map<String, String> params = {};    params.addAll({      'id': post.id.toString(),      'title': post.title,      'body': post.body,      'userId': post.userId.toString(),    });    return params;  }}